apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def versionMajor = 0
def versionMinor = 0
def versionPatch = 0
def debugApiEndpoint = ""

def buildPropsFile = file('build.properties')
def buildProps = new Properties()

def quote = { '"' + it + '"' }

android {
    testBuildType "debugTest"

    if (buildPropsFile.canRead()) {
        buildProps.load(new FileInputStream(buildPropsFile))
        versionMajor = buildProps['VERSION_MAJOR'].toInteger()
        versionMinor = buildProps['VERSION_MINOR'].toInteger()
        versionPatch = buildProps['VERSION_PATCH'].toInteger()
        debugApiEndpoint = buildProps['DEBUG_API_ENDPOINT'].toString()
    } else {
        throw new GradleException("Could not read build.properties")
    }

    compileSdkVersion versions.compileSdk
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        version = versionName
        group = "jp.studyplus.android.sdk"

        consumerProguardFiles 'lib-proguard-rules.txt'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_ENDPOINT", quote(debugApiEndpoint)
        }
        debugTest {
            initWith(buildTypes.debug)
        }
        release {
            buildConfigField "String", "API_ENDPOINT", quote("https://external-api.studyplus.jp")
        }
    }

    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            output.packageLibrary.exclude("libs/*")
            if (variant.name == android.buildTypes.release.name) {
                outputFileName = output.outputFile.name.replace(("-release.aar"), "-${version}.aar")
            } else if (variant.name == android.buildTypes.debug.name) {
                outputFileName = output.outputFile.name.replace((".aar"), "-${version}.aar")
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    def coroutines = "1.0.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    def okhttp = "3.12.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp"
}

apply from: 'build.publish.gradle'
